# Generated by Django 2.0.3 on 2018-05-07 20:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0016_auto_20180507_0027'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date of creation', verbose_name='Created at')),
                ('complaint_day', models.DateField(verbose_name='Day of complaint')),
                ('complaint_time', models.TimeField(verbose_name='Time of complaint')),
                ('description', models.TextField(help_text='Description of the complaint', max_length=4000, verbose_name='Description')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.HealthTeam', verbose_name='Author')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Complaint',
                'verbose_name_plural': 'Complaints',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='media/medicalrecords/exams', verbose_name='Exam')),
                ('day', models.DateTimeField(help_text='Day the exam was performed', verbose_name='Exam day')),
                ('status', models.IntegerField(choices=[(3, 'Executed'), (2, 'Collected'), (1, 'Marked examination')], help_text='Please, insert the status of the exam', verbose_name='Status')),
                ('name', models.CharField(max_length=200, verbose_name='Exam Name')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.HealthTeam', verbose_name='Author')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Exam',
                'verbose_name_plural': 'Exams',
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(blank=True, upload_to='media/')),
                ('day', models.DateTimeField(auto_now=True, help_text='Patient Care Day', verbose_name='Created at')),
                ('message', models.TextField(help_text='Message of medical records', max_length=4000, verbose_name='Message')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.HealthTeam', verbose_name='Author')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Medical Record',
                'verbose_name_plural': 'Medical Records',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(max_length=100, verbose_name='Medicine Name')),
                ('medicine_dosage', models.CharField(max_length=100, verbose_name='Medicine dosage')),
                ('medicine_in_use', models.BooleanField(help_text='Does the patient still use this medication?', verbose_name='In use?')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.HealthTeam', verbose_name='Author')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Patient Medicine',
            },
        ),
        migrations.CreateModel(
            name='SpecificExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('structured_physical_exam', models.FileField(blank=True, upload_to='media/medicalrecords/specificexams', verbose_name='Structured Physical Exam')),
                ('vision', models.FileField(blank=True, upload_to='media/medicalrecords/specificexams', verbose_name='Vision Exam')),
                ('ear', models.FileField(blank=True, upload_to='media/medicalrecords/specificexams', verbose_name='Ear Exam')),
                ('hearth', models.FileField(blank=True, upload_to='media/medicalrecords/specificexams', verbose_name='Hearth Exam')),
                ('muscle_skeletal_system', models.FileField(blank=True, upload_to='media/medicalrecords/specificexams', verbose_name='Muscle skeletal system Exam')),
                ('nervous_system', models.FileField(blank=True, upload_to='media/medicalrecords/specificexams', verbose_name='Nervous system Exam')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.HealthTeam', verbose_name='Author')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Specific Exam',
                'verbose_name_plural': 'Specific Exams',
            },
        ),
        migrations.CreateModel(
            name='StaticData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.PositiveIntegerField(help_text='In grams', validators=[django.core.validators.MaxValueValidator(9999)], verbose_name='Weight at birth')),
                ('APGAR', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('heart_test', models.FileField(blank=True, upload_to='media/medicalrecords', verbose_name='Heart Test')),
                ('ear_test', models.FileField(blank=True, upload_to='media/medicalrecords', verbose_name='Test of the Ear')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.HealthTeam', verbose_name='Author')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.Patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Medical Record Static Data',
            },
        ),
    ]
